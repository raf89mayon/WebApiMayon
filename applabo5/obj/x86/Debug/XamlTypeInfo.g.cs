//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace HomeSnailHome
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace AppLabo5.HomeSnailHome_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[45];
            _typeNameTable[0] = "HomeSnailHome.ViewModel.ViewModelLocator";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "HomeSnailHome.ViewModel.MainViewModel";
            _typeNameTable[3] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[4] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[5] = "HomeSnailHome.ViewModel.UserViewModel";
            _typeNameTable[6] = "HomeSnailHome.ViewModel.HomeViewModel";
            _typeNameTable[7] = "HomeSnailHome.ViewModel.ShellViewModel";
            _typeNameTable[8] = "HomeSnailHome.ViewModel.HousingViewModel";
            _typeNameTable[9] = "HomeSnailHome.ViewModel.MyHousingViewModel";
            _typeNameTable[10] = "HomeSnailHome.ViewModel.DetailHousingViewModel";
            _typeNameTable[11] = "HomeSnailHome.ViewModel.NewUserViewModel";
            _typeNameTable[12] = "HomeSnailHome.ViewModel.NewHousingViewModel";
            _typeNameTable[13] = "HomeSnailHome.ViewModel.EditHousingViewModel";
            _typeNameTable[14] = "HomeSnailHome.ViewModel.HousingSearchViewModel";
            _typeNameTable[15] = "HomeSnailHome.ViewModel.HousingResultsViewModel";
            _typeNameTable[16] = "HomeSnailHome.ViewModel.ConversationListViewModel";
            _typeNameTable[17] = "HomeSnailHome.ViewModel.NewNotationViewModel";
            _typeNameTable[18] = "HomeSnailHome.ViewModel.NewMessageViewModel";
            _typeNameTable[19] = "HomeSnailHome.Converter.StringFormatConverter";
            _typeNameTable[20] = "HomeSnailHome.Converter.BedTypeConverter";
            _typeNameTable[21] = "HomeSnailHome.Converter.HousingOptionsConverter";
            _typeNameTable[22] = "HomeSnailHome.Converter.StringAddressConverter";
            _typeNameTable[23] = "HomeSnailHome.Converter.HousingQuotationConverter";
            _typeNameTable[24] = "HomeSnailHome.Converter.HousingPictureToImageValueConverter";
            _typeNameTable[25] = "HomeSnailHome.Converter.UserPictureToImageValueConverter";
            _typeNameTable[26] = "HomeSnailHome.Converter.SubjectValueConverter";
            _typeNameTable[27] = "HomeSnailHome.Views.About";
            _typeNameTable[28] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[30] = "HomeSnailHome.Views.ConversationListPage";
            _typeNameTable[31] = "HomeSnailHome.Views.DetailHousingPage";
            _typeNameTable[32] = "HomeSnailHome.Views.EditHousingPage";
            _typeNameTable[33] = "HomeSnailHome.Views.HomePage";
            _typeNameTable[34] = "HomeSnailHome.Views.HousingPage";
            _typeNameTable[35] = "HomeSnailHome.Views.HousingResultsPage";
            _typeNameTable[36] = "HomeSnailHome.Views.HousingSearchPage";
            _typeNameTable[37] = "HomeSnailHome.Views.MainPage";
            _typeNameTable[38] = "HomeSnailHome.Views.MyHousingPage";
            _typeNameTable[39] = "HomeSnailHome.Views.NewHousingPage";
            _typeNameTable[40] = "HomeSnailHome.Views.NewMessagePage";
            _typeNameTable[41] = "HomeSnailHome.Views.NewNotationPage";
            _typeNameTable[42] = "HomeSnailHome.Views.NewUserPage";
            _typeNameTable[43] = "HomeSnailHome.Shell";
            _typeNameTable[44] = "HomeSnailHome.Views.UserPage";

            _typeTable = new global::System.Type[45];
            _typeTable[0] = typeof(global::HomeSnailHome.ViewModel.ViewModelLocator);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::HomeSnailHome.ViewModel.MainViewModel);
            _typeTable[3] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[4] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[5] = typeof(global::HomeSnailHome.ViewModel.UserViewModel);
            _typeTable[6] = typeof(global::HomeSnailHome.ViewModel.HomeViewModel);
            _typeTable[7] = typeof(global::HomeSnailHome.ViewModel.ShellViewModel);
            _typeTable[8] = typeof(global::HomeSnailHome.ViewModel.HousingViewModel);
            _typeTable[9] = typeof(global::HomeSnailHome.ViewModel.MyHousingViewModel);
            _typeTable[10] = typeof(global::HomeSnailHome.ViewModel.DetailHousingViewModel);
            _typeTable[11] = typeof(global::HomeSnailHome.ViewModel.NewUserViewModel);
            _typeTable[12] = typeof(global::HomeSnailHome.ViewModel.NewHousingViewModel);
            _typeTable[13] = typeof(global::HomeSnailHome.ViewModel.EditHousingViewModel);
            _typeTable[14] = typeof(global::HomeSnailHome.ViewModel.HousingSearchViewModel);
            _typeTable[15] = typeof(global::HomeSnailHome.ViewModel.HousingResultsViewModel);
            _typeTable[16] = typeof(global::HomeSnailHome.ViewModel.ConversationListViewModel);
            _typeTable[17] = typeof(global::HomeSnailHome.ViewModel.NewNotationViewModel);
            _typeTable[18] = typeof(global::HomeSnailHome.ViewModel.NewMessageViewModel);
            _typeTable[19] = typeof(global::HomeSnailHome.Converter.StringFormatConverter);
            _typeTable[20] = typeof(global::HomeSnailHome.Converter.BedTypeConverter);
            _typeTable[21] = typeof(global::HomeSnailHome.Converter.HousingOptionsConverter);
            _typeTable[22] = typeof(global::HomeSnailHome.Converter.StringAddressConverter);
            _typeTable[23] = typeof(global::HomeSnailHome.Converter.HousingQuotationConverter);
            _typeTable[24] = typeof(global::HomeSnailHome.Converter.HousingPictureToImageValueConverter);
            _typeTable[25] = typeof(global::HomeSnailHome.Converter.UserPictureToImageValueConverter);
            _typeTable[26] = typeof(global::HomeSnailHome.Converter.SubjectValueConverter);
            _typeTable[27] = typeof(global::HomeSnailHome.Views.About);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[30] = typeof(global::HomeSnailHome.Views.ConversationListPage);
            _typeTable[31] = typeof(global::HomeSnailHome.Views.DetailHousingPage);
            _typeTable[32] = typeof(global::HomeSnailHome.Views.EditHousingPage);
            _typeTable[33] = typeof(global::HomeSnailHome.Views.HomePage);
            _typeTable[34] = typeof(global::HomeSnailHome.Views.HousingPage);
            _typeTable[35] = typeof(global::HomeSnailHome.Views.HousingResultsPage);
            _typeTable[36] = typeof(global::HomeSnailHome.Views.HousingSearchPage);
            _typeTable[37] = typeof(global::HomeSnailHome.Views.MainPage);
            _typeTable[38] = typeof(global::HomeSnailHome.Views.MyHousingPage);
            _typeTable[39] = typeof(global::HomeSnailHome.Views.NewHousingPage);
            _typeTable[40] = typeof(global::HomeSnailHome.Views.NewMessagePage);
            _typeTable[41] = typeof(global::HomeSnailHome.Views.NewNotationPage);
            _typeTable[42] = typeof(global::HomeSnailHome.Views.NewUserPage);
            _typeTable[43] = typeof(global::HomeSnailHome.Shell);
            _typeTable[44] = typeof(global::HomeSnailHome.Views.UserPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ViewModelLocator() { return new global::HomeSnailHome.ViewModel.ViewModelLocator(); }
        private object Activate_4_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_19_StringFormatConverter() { return new global::HomeSnailHome.Converter.StringFormatConverter(); }
        private object Activate_20_BedTypeConverter() { return new global::HomeSnailHome.Converter.BedTypeConverter(); }
        private object Activate_21_HousingOptionsConverter() { return new global::HomeSnailHome.Converter.HousingOptionsConverter(); }
        private object Activate_22_StringAddressConverter() { return new global::HomeSnailHome.Converter.StringAddressConverter(); }
        private object Activate_23_HousingQuotationConverter() { return new global::HomeSnailHome.Converter.HousingQuotationConverter(); }
        private object Activate_24_HousingPictureToImageValueConverter() { return new global::HomeSnailHome.Converter.HousingPictureToImageValueConverter(); }
        private object Activate_25_UserPictureToImageValueConverter() { return new global::HomeSnailHome.Converter.UserPictureToImageValueConverter(); }
        private object Activate_26_SubjectValueConverter() { return new global::HomeSnailHome.Converter.SubjectValueConverter(); }
        private object Activate_27_About() { return new global::HomeSnailHome.Views.About(); }
        private object Activate_30_ConversationListPage() { return new global::HomeSnailHome.Views.ConversationListPage(); }
        private object Activate_31_DetailHousingPage() { return new global::HomeSnailHome.Views.DetailHousingPage(); }
        private object Activate_32_EditHousingPage() { return new global::HomeSnailHome.Views.EditHousingPage(); }
        private object Activate_33_HomePage() { return new global::HomeSnailHome.Views.HomePage(); }
        private object Activate_34_HousingPage() { return new global::HomeSnailHome.Views.HousingPage(); }
        private object Activate_35_HousingResultsPage() { return new global::HomeSnailHome.Views.HousingResultsPage(); }
        private object Activate_36_HousingSearchPage() { return new global::HomeSnailHome.Views.HousingSearchPage(); }
        private object Activate_37_MainPage() { return new global::HomeSnailHome.Views.MainPage(); }
        private object Activate_38_MyHousingPage() { return new global::HomeSnailHome.Views.MyHousingPage(); }
        private object Activate_39_NewHousingPage() { return new global::HomeSnailHome.Views.NewHousingPage(); }
        private object Activate_40_NewMessagePage() { return new global::HomeSnailHome.Views.NewMessagePage(); }
        private object Activate_41_NewNotationPage() { return new global::HomeSnailHome.Views.NewNotationPage(); }
        private object Activate_42_NewUserPage() { return new global::HomeSnailHome.Views.NewUserPage(); }
        private object Activate_43_Shell() { return new global::HomeSnailHome.Shell(); }
        private object Activate_44_UserPage() { return new global::HomeSnailHome.Views.UserPage(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  HomeSnailHome.ViewModel.ViewModelLocator
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ViewModelLocator;
                userType.AddMemberName("MainPage");
                userType.AddMemberName("UserPage");
                userType.AddMemberName("HomePage");
                userType.AddMemberName("Shell");
                userType.AddMemberName("HousingPage");
                userType.AddMemberName("MyHousingPage");
                userType.AddMemberName("DetailHousingPage");
                userType.AddMemberName("NewUserPage");
                userType.AddMemberName("NewHousingPage");
                userType.AddMemberName("EditHousingPage");
                userType.AddMemberName("HousingSearchPage");
                userType.AddMemberName("HousingResultsPage");
                userType.AddMemberName("ConversationListPage");
                userType.AddMemberName("NewNotationPage");
                userType.AddMemberName("NewMessagePage");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  HomeSnailHome.ViewModel.MainViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                xamlType = userType;
                break;

            case 4:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_ObservableObject;
                xamlType = userType;
                break;

            case 5:   //  HomeSnailHome.ViewModel.UserViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  HomeSnailHome.ViewModel.HomeViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  HomeSnailHome.ViewModel.ShellViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  HomeSnailHome.ViewModel.HousingViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  HomeSnailHome.ViewModel.MyHousingViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  HomeSnailHome.ViewModel.DetailHousingViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  HomeSnailHome.ViewModel.NewUserViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  HomeSnailHome.ViewModel.NewHousingViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  HomeSnailHome.ViewModel.EditHousingViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  HomeSnailHome.ViewModel.HousingSearchViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  HomeSnailHome.ViewModel.HousingResultsViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  HomeSnailHome.ViewModel.ConversationListViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  HomeSnailHome.ViewModel.NewNotationViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  HomeSnailHome.ViewModel.NewMessageViewModel
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  HomeSnailHome.Converter.StringFormatConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_StringFormatConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  HomeSnailHome.Converter.BedTypeConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_BedTypeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  HomeSnailHome.Converter.HousingOptionsConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_HousingOptionsConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  HomeSnailHome.Converter.StringAddressConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_StringAddressConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  HomeSnailHome.Converter.HousingQuotationConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_HousingQuotationConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  HomeSnailHome.Converter.HousingPictureToImageValueConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_HousingPictureToImageValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  HomeSnailHome.Converter.UserPictureToImageValueConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_UserPictureToImageValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  HomeSnailHome.Converter.SubjectValueConverter
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_26_SubjectValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  HomeSnailHome.Views.About
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_About;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  HomeSnailHome.Views.ConversationListPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_ConversationListPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  HomeSnailHome.Views.DetailHousingPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_DetailHousingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  HomeSnailHome.Views.EditHousingPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_EditHousingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  HomeSnailHome.Views.HomePage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_HomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  HomeSnailHome.Views.HousingPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_HousingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  HomeSnailHome.Views.HousingResultsPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_HousingResultsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  HomeSnailHome.Views.HousingSearchPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_HousingSearchPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  HomeSnailHome.Views.MainPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  HomeSnailHome.Views.MyHousingPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_MyHousingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  HomeSnailHome.Views.NewHousingPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_NewHousingPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  HomeSnailHome.Views.NewMessagePage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_NewMessagePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  HomeSnailHome.Views.NewNotationPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_NewNotationPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  HomeSnailHome.Views.NewUserPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_NewUserPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  HomeSnailHome.Shell
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_43_Shell;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  HomeSnailHome.Views.UserPage
                userType = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_UserPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_ViewModelLocator_MainPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.MainPage;
        }
        private object get_1_ViewModelLocator_UserPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.UserPage;
        }
        private object get_2_ViewModelLocator_HomePage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.HomePage;
        }
        private object get_3_ViewModelLocator_Shell(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.Shell;
        }
        private object get_4_ViewModelLocator_HousingPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.HousingPage;
        }
        private object get_5_ViewModelLocator_MyHousingPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.MyHousingPage;
        }
        private object get_6_ViewModelLocator_DetailHousingPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.DetailHousingPage;
        }
        private object get_7_ViewModelLocator_NewUserPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.NewUserPage;
        }
        private object get_8_ViewModelLocator_NewHousingPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.NewHousingPage;
        }
        private object get_9_ViewModelLocator_EditHousingPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.EditHousingPage;
        }
        private object get_10_ViewModelLocator_HousingSearchPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.HousingSearchPage;
        }
        private object get_11_ViewModelLocator_HousingResultsPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.HousingResultsPage;
        }
        private object get_12_ViewModelLocator_ConversationListPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.ConversationListPage;
        }
        private object get_13_ViewModelLocator_NewNotationPage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.NewNotationPage;
        }
        private object get_14_ViewModelLocator_NewMessagePage(object instance)
        {
            var that = (global::HomeSnailHome.ViewModel.ViewModelLocator)instance;
            return that.NewMessagePage;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember xamlMember = null;
            global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "HomeSnailHome.ViewModel.ViewModelLocator.MainPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "MainPage", "HomeSnailHome.ViewModel.MainViewModel");
                xamlMember.Getter = get_0_ViewModelLocator_MainPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.UserPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "UserPage", "HomeSnailHome.ViewModel.UserViewModel");
                xamlMember.Getter = get_1_ViewModelLocator_UserPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.HomePage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "HomePage", "HomeSnailHome.ViewModel.HomeViewModel");
                xamlMember.Getter = get_2_ViewModelLocator_HomePage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.Shell":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "Shell", "HomeSnailHome.ViewModel.ShellViewModel");
                xamlMember.Getter = get_3_ViewModelLocator_Shell;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.HousingPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "HousingPage", "HomeSnailHome.ViewModel.HousingViewModel");
                xamlMember.Getter = get_4_ViewModelLocator_HousingPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.MyHousingPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "MyHousingPage", "HomeSnailHome.ViewModel.MyHousingViewModel");
                xamlMember.Getter = get_5_ViewModelLocator_MyHousingPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.DetailHousingPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "DetailHousingPage", "HomeSnailHome.ViewModel.DetailHousingViewModel");
                xamlMember.Getter = get_6_ViewModelLocator_DetailHousingPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.NewUserPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "NewUserPage", "HomeSnailHome.ViewModel.NewUserViewModel");
                xamlMember.Getter = get_7_ViewModelLocator_NewUserPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.NewHousingPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "NewHousingPage", "HomeSnailHome.ViewModel.NewHousingViewModel");
                xamlMember.Getter = get_8_ViewModelLocator_NewHousingPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.EditHousingPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "EditHousingPage", "HomeSnailHome.ViewModel.EditHousingViewModel");
                xamlMember.Getter = get_9_ViewModelLocator_EditHousingPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.HousingSearchPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "HousingSearchPage", "HomeSnailHome.ViewModel.HousingSearchViewModel");
                xamlMember.Getter = get_10_ViewModelLocator_HousingSearchPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.HousingResultsPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "HousingResultsPage", "HomeSnailHome.ViewModel.HousingResultsViewModel");
                xamlMember.Getter = get_11_ViewModelLocator_HousingResultsPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.ConversationListPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "ConversationListPage", "HomeSnailHome.ViewModel.ConversationListViewModel");
                xamlMember.Getter = get_12_ViewModelLocator_ConversationListPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.NewNotationPage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "NewNotationPage", "HomeSnailHome.ViewModel.NewNotationViewModel");
                xamlMember.Getter = get_13_ViewModelLocator_NewNotationPage;
                xamlMember.SetIsReadOnly();
                break;
            case "HomeSnailHome.ViewModel.ViewModelLocator.NewMessagePage":
                userType = (global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HomeSnailHome.ViewModel.ViewModelLocator");
                xamlMember = new global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlMember(this, "NewMessagePage", "HomeSnailHome.ViewModel.NewMessageViewModel");
                xamlMember.Getter = get_14_ViewModelLocator_NewMessagePage;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlSystemBaseType
    {
        global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::AppLabo5.HomeSnailHome_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

